- include_tasks: "{{ ansible_os_family|lower }}.yml"
  when: docker_download_url is not defined or docker_download_url == '' or docker_download_url == None

- include_tasks: manual_install_docker.yml
  when: docker_download_url|default('') != ''

- name: make docker configuration directory
  file:
    state: directory
    name: /etc/docker

- name: Install docker storage configuration
  template:
    src: daemon.json
    dest: /etc/docker/daemon.json

- name: make docker data directory
  file:
    state: directory
    name: "{{ docker_data_dir }}"

- block:
    - name: Create docker data partition
      parted:
        device: "{{ docker_data_device }}"
        number: 1
        state: present

    - name: Make filesystem {{ docker_data_file_system }}
      filesystem:
        fstype: "{{ docker_data_file_system|default('ext4') }}"
        dev: "{{ docker_data_device }}1"

    - name: Set up mount point for docker dir
      mount:
        path: "{{ docker_data_dir }}"
        src: "{{ docker_data_device }}1"
        fstype: "{{ docker_data_file_system }}"
        opts: "{{ docker_data_file_system_mount_options|default(omit) }}"
        state: present

  when: docker_data_device|default() and docker_storage_driver != 'devicemapper'

- name: Allow routing via loopback interface
  sysctl:
    name: net.ipv4.conf.all.route_localnet
    value: 1
    reload: yes

- name: Deploy the cleaning up docker images script as cron does not like direct command
  copy:
    content: |
      #!/bin/sh
      docker images | awk '{print $3}'| while read img_id; do docker rmi -f $img_id; done
    dest: "/usr/local/bin/cleaning-docker-images.sh"
    mode: "u+rwx"

- name: Cleaning up images daily to maintain space
  cron:
    name: cleanup_docker_images
    job: "/usr/local/bin/cleaning-docker-images.sh"
    minute: "{{ docker_clean_image_at_min|default(0) }}"
    hour: "{{ docker_clean_image_at_hour|default(0) }}"
    state: present
  when: docker_clean_image_enabled|default(True)

- name: ensure docker is started and enabled
  service:
    name: docker
    state: started
    enabled: yes
